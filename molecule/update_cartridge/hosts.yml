---
cluster:
  vars:
    # common connection opts
    ansible_user: root
    ansible_connection: docker
    become: true
    become_user: root

    # common cartridge opts
    cartridge_app_name: myapp
    cartridge_cluster_cookie: secret-cookie

    cartridge_enable_tarantool_repo: false
    cartridge_configure_systemd_unit_files: false
    cartridge_configure_tmpfiles: false
    cartridge_install_tarantool_for_tgz: false

    cartridge_bootstrap_vshard: true
    cartridge_app_config:
      my-section:
        body:
          some-section: some-value

    cartridge_failover_params:
      mode: disabled

    cartridge_auth:
      enabled: true
      cookie_max_age: 500

    cartridge_multiversion: true

    cartridge_custom_scenarios:
      bootstrap_cluster:
        - deliver_package
        - update_package
        - update_instance
        - configure_instance
        - restart_instance
        - wait_instance_started
        - connect_to_membership
        - edit_topology
      update_tgz:
        - deliver_package
        - update_package
        - update_instance
        - restart_instance
        - wait_instance_started

  # instances
  hosts:
    # This test should check that we choose right control instance
    # in case of different two-phase commit versions on instances.
    # By default, instance with the URI that is first lexicographically
    # is chosen. Here instance with newest Cartridge has lower URI
    # to avoid passing this test accidentally.
    storage-with-c-2.1.2:
      config:
        advertise_uri: 'vm1:3351'
        http_port: 8151

    storage-with-c-2.2.0:
      config:
        advertise_uri: 'vm1:3342'
        http_port: 8142

    storage-with-c-2.3.0:
      config:
        advertise_uri: 'vm1:3333'
        http_port: 8133

    storage-with-c-2.4.0:
      config:
        advertise_uri: 'vm1:3324'
        http_port: 8124

    storage-with-c-2.5.0:
      config:
        advertise_uri: 'vm1:3315'  # this URI is first lexicographically
        http_port: 8115

  children:
    # group by hosts
    machine_1:
      vars:
        ansible_host: vm1

      hosts:
        storage-with-c-2.1.2:
        storage-with-c-2.2.0:
        storage-with-c-2.3.0:
        storage-with-c-2.4.0:
        storage-with-c-2.5.0:

    # group by replica sets
    storage_replicaset:
      hosts:
        storage-with-c-2.1.2:
        storage-with-c-2.2.0:
        storage-with-c-2.3.0:
        storage-with-c-2.4.0:
        storage-with-c-2.5.0:
      vars:
        replicaset_alias: storage
        roles:
          - 'vshard-storage'
          - 'vshard-router'
