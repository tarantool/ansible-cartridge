---
cluster:
  vars:
    ansible_user: root
    ansible_connection: docker
    become: true
    become_user: root

    cartridge_app_name: myapp
    cartridge_package_path: ./packages/myapp-1.0.0-0.tar.gz
    cartridge_multiversion: true

    cartridge_data_dir: /opt/data
    cartridge_memtx_dir_parent: /opt/memtx
    cartridge_vinyl_dir_parent: /opt/vinyl
    cartridge_wal_dir_parent: /opt/wal
    cartridge_log_dir_parent: /opt/log

    cartridge_run_dir: /opt/run
    cartridge_conf_dir: /opt/conf.d
    cartridge_app_install_dir: /opt/install
    cartridge_app_instances_dir: /opt/instances
    cartridge_systemd_dir: /etc/systemd/system

    check_restore_eval_args:
      - '{{ stateboard }}'
    check_restore_eval_body: |
      local is_stateboard = ...
      if is_stateboard then
        assert(box.space.leader ~= nil, "Space 'leader' should exists")
      else
        assert(box.space.memtx_space ~= nil, "Space 'memtx_space' should exists")
        local tuples = box.space.memtx_space:select()
        assert(#tuples == 1 and tuples[1][1] == 12345, "Space 'memtx_space' should contain test tuple")

        assert(box.space.vinyl_space ~= nil, 'Space "vinyl_space" should exists')
        local tuples = box.space.vinyl_space:select()
        assert(#tuples == 1 and tuples[1][1] == 67890, "Space 'vinyl_space' should contain test tuple")

        assert(require('cartridge').config_get_readonly().test == nil, "Section 'test' shouldn't exists")
      end

  hosts:
    instance-1-not-joined:
      config:
        advertise_uri: 'vm1:3101'
        http_port: 8101

      # To change ansible host by tasks
      binary_port: 3201
      http_port: 8201

    instance-2-joined:
      config:
        advertise_uri: 'vm1:3102'
        http_port: 8102

      # To change ansible host by tasks
      binary_port: 3202
      http_port: 8202

    instance-3-joined:
      config:
        advertise_uri: 'vm1:3103'
        http_port: 8103

      # To change ansible host by tasks
      binary_port: 3203
      http_port: 8203

    my-stateboard:
      config:
        listen: 0.0.0.0:4001
        password: secret-stateboard
      stateboard: true

  children:
    machine_1:
      vars:
        ansible_host: vm1
      hosts:
        instance-1-not-joined:
        instance-2-joined:
        instance-3-joined:
        my-stateboard:

    machine_2:
      vars:
        ansible_host: vm2

    r1_replicaset:
      hosts:
        instance-2-joined:
        instance-3-joined:
      vars:
        replicaset_alias: r1
        roles:
          - failover-coordinator
          - app.roles.custom
