---
all:
  children:
    cluster:
      vars:
        # common connection opts
        ansible_user: root
        ansible_connection: docker
        become: true
        become_user: root

        # common cartridge opts
        cartridge_app_name: ['incorrect type to check playbook vars']
        cartridge_cluster_cookie: secret-cookie

        common_memtx_memory: 268436000
        cartridge_defaults:
          some_option: 'default value'

        cartridge_bootstrap_vshard: true
        cartridge_failover_params:
          mode: stateful
          state_provider: stateboard
          stateboard_params:
            uri: vm1:4001
            password: secret-stateboard
          fencing_enabled: true
          fencing_timeout: 11
          fencing_pause: 3
          failover_timeout: 21

        cartridge_auth:
          enabled: true

          cookie_max_age: 1000
          cookie_renew_age: 100

          users:
            - username: tarantool
              password: tarantool-the-best
              fullname: Tarantool The Best
              email: tarantool@tarantool.org

        cartridge_app_config:
          section-1:
            body:
              key-1: value-1
              key-2: value-2

          section-2:
            body: section-2-value

          section-3:
            deleted: true

      # instances
      hosts:
        storage-1:
          config:
            advertise_uri: 'vm1:3101'
            http_port: 8101
          zone: Hogwarts

        storage-1-replica:
          config:
            advertise_uri: 'vm1:3102'
            http_port: 8102
          zone: Mordor

        storage-1-replica-2:
          config:
            advertise_uri: 'vm3:3301'
            http_port: 8301
          zone: Narnia

        storage-1-replica-3:
          config:
            advertise_uri: 'vm4:3401'
            http_port: 8401

        storage-1-replica-4:
          config:
            advertise_uri: 'vm3:3302'
            http_port: 8302
          expelled: true

        core-1:
          config:
            advertise_uri: 'vm2:3201'
            http_port: 8201
            memtx_memory: '{{ common_memtx_memory }}'
          instance_start_timeout: 120
          instance_discover_buckets_timeout: 120

        core-2:
          config:
            advertise_uri: 'vm1:3103'
            http_port: 8103
          expelled: true

        my-stateboard:
          config:
            listen: 0.0.0.0:4001
            password: secret-stateboard
          stateboard: true

        # this stateboard instance is here just to check
        # that deploying stateboard via TGZ works
        my-stateboard-from-tgz:
          config:
            listen: 0.0.0.0:4002
            password: secret-stateboard
          stateboard: true

      children:
        # group by hosts
        machine_1:
          vars:
            ansible_host: vm1
            cartridge_package_path: ./packages/myapp-1.0.0-0.rpm

          hosts:
            storage-1:
            storage-1-replica:
            core-2:
            my-stateboard:

        machine_2:
          vars:
            ansible_host: vm2
            cartridge_package_path: ./packages/myapp-1.0.0-0.deb

          hosts:
            core-1:

        machine_3:
          vars:
            ansible_host: vm3
            cartridge_package_path: ./packages/myapp-1.0.0-0.tar.gz

            cartridge_multiversion: true

            cartridge_run_dir: /opt/run
            cartridge_data_dir: /opt/data
            cartridge_memtx_dir_parent: /opt/memtx
            cartridge_vinyl_dir_parent: /opt/vinyl
            cartridge_wal_dir_parent: /opt/wal
            cartridge_conf_dir: /opt/conf.d
            cartridge_app_install_dir: /opt/install
            cartridge_app_instances_dir: /opt/instances
            cartridge_systemd_dir: /etc/systemd/system

          hosts:
            storage-1-replica-2:
            storage-1-replica-4:
            my-stateboard-from-tgz:

        machine_4:
          vars:
            ansible_host: vm4
            cartridge_package_path: ./packages/myapp-1.0.0-0.tar.gz

          hosts:
            storage-1-replica-3:

        # group by replica sets
        storage_1_replicaset:
          hosts:
            storage-1:
            storage-1-replica:
            storage-1-replica-2:
            storage-1-replica-3:
            storage-1-replica-4:
          vars:
            replicaset_alias: storage-1
            failover_priority:
              - storage-1
              - storage-1-replica
              - storage-1-replica-2
              - storage-1-replica-3
            roles:
              - 'vshard-storage'
            weight: 3
            all_rw: true
            vshard_group: hot

        core_1_replicaset:
          hosts:
            core-1:

          vars:
            replicaset_alias: core-1
            roles:
              - app.roles.custom
              - failover-coordinator

        core_2_replicaset:
          hosts:
            core-2:

          vars:
            replicaset_alias: core-2
            roles:
              - 'app.roles.custom'
