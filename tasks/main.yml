---
# Works only on RedHat
- name: Fail for other distributions
  fail:
    msg: 'Deploy to {{ ansible_os_family }} distributions is not supported yet'
  when: ansible_os_family != "RedHat"

- name: Set host_address, cartridge_confdir and package_updated variables
  set_fact:
    host_address: '{{ ansible_host }}'
    cartridge_confdir: /etc/tarantool/conf.d
    package_updated: false

- name: Dependencies
  include_tasks: install_dependencies.yml

- name: Validate config
  cartridge_validate_config:
    hosts: '{{ play_hosts }}'
    hostvars: '{{ hostvars }}'
  run_once: true

# Rewrites cartridge_app_name from package info
- name: Install RPM for RedHat
  include_tasks: install_rpm.yml
  when: ansible_os_family == 'RedHat'

- name: Set one control instance to rule them all
  cartridge_control_instance:
    hosts: '{{ play_hosts }}'
    hostvars: '{{ hostvars }}'
  register: control_instance

- name: Global variables for control server address and port
  set_fact:
    control_instance_address: '{{ control_instance.meta.control_instance_address }}'
    control_instance_port: '{{ control_instance.meta.control_instance_port }}'

- name: Place default application config
  copy:
    content: >-
      {{
        { cartridge_app_name: cartridge_defaults | combine({"cluster_cookie": cartridge_cluster_cookie}) }
        | to_nice_yaml
      }}
    dest: '{{ cartridge_confdir }}/{{ cartridge_app_name }}.yml'
    owner: tarantool
    group: tarantool
    mode: '644'
  when: cartridge_instances is defined
  register: default_config

- name: Start instances
  include_tasks: start_instance.yml
  vars:
    instance: '{{ item }}'
  with_items: '{{ cartridge_instances }}'

- name: Probe instances
  include_tasks: probe_instance.yml
  vars:
    instance: '{{ item }}'
  with_items: '{{ cartridge_instances }}'

- name: Setup replicasets
  include_tasks: setup_replicaset.yml
  vars:
    replicaset: '{{ item }}'
  with_items: '{{ cartridge_replicasets }}'
  when: ansible_host == control_instance_address

- name: Cartridge auth
  include_tasks: manage_auth.yml
  when: ansible_host == control_instance_address

- name: Bootstrap vshard
  include_tasks: bootstrap_vshard.yml
  when: ansible_host == control_instance_address and cartridge_bootstrap_vshard

- name: Manage failover
  include_tasks: manage_failover.yml
  when: ansible_host == control_instance_address
