---

- name: 'Get info about instance systemd service'
  systemd:
    name: '{{ instance_info.systemd_service }}'
  register: systemd_status

- name: 'Check that instance is stopped and disabled'
  assert:
    fail_msg: 'Stop and disable instance before files backup!'
    success_msg: 'Instance is stopped and disabled'
    that: systemd_status.status.ActiveState == "inactive"

- name: 'Create backups dir'
  file:
    path: '{{ cartridge_remote_backups_dir }}'
    owner: '{{ cartridge_app_user }}'
    group: '{{ cartridge_app_group }}'
    state: directory
    mode: 0750
  when: inventory_hostname in single_instances_for_each_machine

- name: 'Create instance backup archive'
  cartridge_backup_instance:
    stateboard: '{{ stateboard }}'
    instance_id: '{{ instance_info.instance_id }}'
    backups_dir: '{{ cartridge_remote_backups_dir }}'
    custom_backup_files: '{{ instance_info.paths_to_backup_files }}'
  register: backup_res

- name: 'Set "backup_archive_path" and "instance_backup_files" facts'
  set_fact:
    instance_backup_files: '{{ backup_res.fact.backup_files }}'
    backup_archive_path: '{{ backup_res.fact.backup_archive_path }}'

- name: 'Set "backup_files_from_machine" fact'
  set_fact:
    backup_files_from_machine: '{{ backup_files_from_machine + hostvars[instance].instance_backup_files }}'
  with_items: '{{ instances_from_same_machine[inventory_hostname] }}'
  loop_control:
    loop_var: instance

- name: 'Fetch backup archive'
  fetch:
    src: '{{ backup_archive_path }}'
    dest: '{{ cartridge_fetch_backups_dir | cartridge_add_trailing_slash }}'
    flat: true
  when: cartridge_fetch_backups
  register: backup_archive_fetch_res

- name: 'Set "fetched_backup_archive_path" fact'
  set_fact:
    fetched_backup_archive_path: '{{ backup_archive_fetch_res.dest }}'
  when: cartridge_fetch_backups
