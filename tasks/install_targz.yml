---
- name: Create instance group
  group:
    name: "{{ instance_group }}"

- name: Create instance user and add to group
  user:
    name: "{{ instance_user }}"
    groups: "{{ instance_group }}"
    append: yes

#   Create folders
- name: Create userspace folders
  file:
    path: "{{ item.path }}"
    state: directory
    mode: "{{ item.mode | default('0755') }}"
    owner: "{{ instance_user }}"
    group: "{{ instance_group }}"
  loop:
    - {path: "{{ bin_dir }}{{ cartridge_app_name }}"}
    - {path: "{{ data_dir }}"}
    - {path: "{{ conf_dir }}"}
    - {path: "{{ instance_run_path }}"}
  any_errors_fatal: true

- name: Create a package directory
  file:
    path: "{{ apps_dir }}"
    state: directory
  any_errors_fatal: true

- name: Unpack a package
  unarchive:
    creates: "{{ apps_dir }}/{{ cartridge_app_name }}"
    src: "{{ cartridge_package_path }}"
    dest: "{{ apps_dir }}"
    keep_newer: true
  any_errors_fatal: true

- name: Create a symlink to the package folder
  file:
    src: "{{ apps_dir }}/{{ cartridge_app_name }}"
    dest: "{{ bin_dir }}{{ cartridge_app_name }}"
    state: link
    force: true
  any_errors_fatal: true

- name: Create an app@.service file
  template:
    src: app@.service.j2
    dest: "{{ instance_systemd_path }}{{ instance_systemd_unit_file }}"
  any_errors_fatal: true
  notify:
    - reload-systemd-daemon

- name: Set stateboard facts
  set_fact:
    stateboard_name: '{{ cartridge_app_name }}-stateboard'
    stateboard_work_dir: '{{ cartridge_app_name | get_instance_work_dir(inventory_hostname, True, data_dir) }}'
    stateboard_run_dir: '{{ cartridge_app_name | get_instance_run_dir(inventory_hostname, True, run_dir) }}'
    stateboard_conf_file: '{{ cartridge_app_name | get_instance_conf_file(inventory_hostname, True, conf_dir) }}'

- name: Create a stateboard service file
  template:
    src: stateboard.service.j2
    dest: "{{ instance_systemd_path }}{{ stateboard_name }}.service"
  any_errors_fatal: true
  notify:
    - reload-systemd-daemon
