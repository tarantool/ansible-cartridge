---
variables:
  BUNDLE_VERSION: 1.10.3-93-g580699f
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""

stages:
  - build
  - test

default:
  image: docker:git
  services:
    - name: docker:dind
      alias: localhost

  before_script:
    - apk update && apk add --no-cache docker
      python3-dev py3-pip docker gcc git curl build-base
      autoconf automake py3-cryptography linux-headers
      musl-dev libffi-dev openssl-dev openssh
    - docker info
    - python3 --version
    - pip3 install ansible molecule docker
    - ansible --version


build:
  stage: build
  tags:
    - molecule-dind

  before_script:
    - apk update && apk add --no-cache docker bash
    - docker info

  script:
    - ./create-packages.sh
  artifacts:
    paths:
      - packages/
    expire_in: 1 day

test-enterprise:
  stage: test
  tags:
    - molecule-dind
  script:
    - ./linter.sh

    - cp packages/myapp-1.0.0-0.enterprise.rpm myapp-1.0.0-0.rpm
    - cp packages/myapp-1.0.0-0.enterprise.deb myapp-1.0.0-0.deb

    - cd .. && cp -R ansible-cartridge tarantool-cartridge && cd tarantool-cartridge
    - molecule test

test-opensource-1.10:
  stage: test
  tags:
    - molecule-dind
  script:
    - ./linter.sh

    - cp packages/myapp-1.0.0-0.opensource-1.10.rpm myapp-1.0.0-0.rpm
    - cp packages/myapp-1.0.0-0.opensource-1.10.deb myapp-1.0.0-0.deb

    - cd .. && cp -R ansible-cartridge tarantool-cartridge && cd tarantool-cartridge
    - molecule test

test-opensource-2.2:
  stage: test
  tags:
    - molecule-dind
  script:
    - ./linter.sh

    - cp packages/myapp-1.0.0-0.opensource-2.2.rpm myapp-1.0.0-0.rpm
    - cp packages/myapp-1.0.0-0.opensource-2.2.deb myapp-1.0.0-0.deb

    - cd .. && cp -R ansible-cartridge tarantool-cartridge && cd tarantool-cartridge
    - molecule test
