---
variables:
  BUNDLE_VERSION: 2.3.1-3-g889e0f5
  CARTRIDGE_CLI_VERSION: 1.7.0

stages:
  - prebuild
  - packages
  - unit
  - test

.dind:
  tags:
    - dind
  services:
    - name: docker:dind
      alias: localhost
      command: ["--mtu=1300"]
  image: docker:git
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ''
    DOCKER_BUILDKIT: 1

.prebuild:
  extends: .dind
  stage: prebuild
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
  script:
    - docker pull $IMAGE || true

    - docker build
      --cache-from $IMAGE
      --tag $IMAGE
      --file $DOCKERFILE
      .
    - docker push $IMAGE
  after_script:
    - docker logout registry.gitlab.com

prebuild-test:
  extends: .prebuild
  only:
    changes:
      - Dockerfile
      - .gitlab-ci.yml
  variables:
    IMAGE: $CI_REGISTRY_IMAGE
    DOCKERFILE: Dockerfile

prebuild-packages:
  extends: .prebuild
  only:
    changes:
      - Dockerfile.packages
      - .gitlab-ci.yml
  variables:
    IMAGE: $CI_REGISTRY_IMAGE:packages
    DOCKERFILE: Dockerfile.packages

prebuild-unit:
  extends: .prebuild
  only:
    changes:
      - Dockerfile.unit
      - .gitlab-ci.yml
      - unit/requirements.txt
  variables:
    IMAGE: $CI_REGISTRY_IMAGE:unit
    DOCKERFILE: Dockerfile.unit


.packages:
  extends: .dind
  stage: packages
  image: $CI_REGISTRY_IMAGE:packages
  script:
    - tarantool --version
    - cartridge --version

    - ./create-packages.sh
  artifacts:
    paths:
      - ./packages/myapp-*.rpm
      - ./packages/myapp-*.deb
    when: always
  dependencies: []

packages-enterprise:
  extends: .packages
  before_script:
    - curl -O -L https://${SDK_DOWNLOAD_USER}:${SDK_DOWNLOAD_TOKEN}@download.tarantool.io/enterprise/tarantool-enterprise-bundle-${BUNDLE_VERSION}.tar.gz
    - tar -xzf tarantool-enterprise-bundle-${BUNDLE_VERSION}.tar.gz
    - rm -rf tarantool-enterprise-bundle-${BUNDLE_VERSION}.tar.gz
    - source tarantool-enterprise/env.sh

.packages-opensource:
  extends: .packages
  before_script:
    - curl -s https://packagecloud.io/install/repositories/tarantool/${TARANTOOL_VERSION}/script.rpm.sh | bash
    - yum install -y tarantool tarantool-devel
    - tarantoolctl rocks install cartridge-cli ${CARTRIDGE_CLI_VERSION}
    - PATH=$PWD/.rocks/bin/:$PATH

packages-opensource-1.10:
  extends: .packages-opensource
  variables:
    TARANTOOL_VERSION: '1_10'

packages-opensource-2.2:
  extends: .packages-opensource
  variables:
    TARANTOOL_VERSION: '2_2'


unit:
  stage: unit
  tags:
    - docker
  image: $CI_REGISTRY_IMAGE:unit
  before_script:
    - tarantool --version
    - python3.6 --version
  script:
    - flake8 library unit
    - python3.6 -m unittest discover -v unit


.test:
  extends: .dind
  stage: test
  image: $CI_REGISTRY_IMAGE

  script:
    - docker info
    - molecule --version

    - cd .. && (rm -rf tarantool-cartridge || true)
    - cp -R ansible-cartridge tarantool-cartridge && cd tarantool-cartridge

    - docker network create
      --driver bridge
      --opt com.docker.network.driver.mtu=1450
      cartridge-network

    - molecule test --destroy=never

  after_script:
    - molecule destroy

test-enterprise:
  extends: .test
  dependencies:
    - packages-enterprise

test-opensource-1.10:
  extends: .test
  dependencies:
    - packages-opensource-1.10

test-opensource-2.2:
  extends: .test
  dependencies:
    - packages-opensource-2.2
